{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCC\\\\Desktop\\\\isa-front\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from 'src/components/context/authProvider/authContext';\nimport \"./login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  var _location$state, _location$state$from;\n\n  /*\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n    //   navigate('#profile');\r\n    }\r\n  }, [navigate])\r\n    const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n      try {\r\n      const res = await axios.post('http://localhost:8080/api/auth/signin', {\r\n        email: email,\r\n        password: password\r\n      });\r\n      console.log(res);\r\n      // handle response\r\n      if (res.status === 200) {\r\n        // Save token in local storage\r\n        localStorage.setItem('token', res.data.token);\r\n        //navigate('#profile');\r\n        // Redirect to the profile page\r\n    }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // handle error\r\n    }\r\n  }\r\n  */\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/home\";\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext); //state the name of the employee gotten from the form\n\n  const [email, setEmail] = useState(\"\"); //state to store password of the employee gotten from the form\n\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      fetch(`http://localhost:3000/signin`, {\n        method: \"POST\",\n        headers: {\n          \"content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(res => res.json()).then(res => {\n        if (res.name) {\n          console.log(res);\n          const role = res.role;\n          const token = res.token; //storing employee information in our Auth state\n\n          setAuth({\n            role,\n            token,\n            email\n          });\n          console.log(auth);\n          setEmail(\"\");\n          setPassword(\"\"); //navigate our employee to the home page\n\n          navigate(from, {\n            replace: true\n          });\n        } else {\n          console.log(\"incorrect submission\");\n        }\n      });\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"no server response\");\n      } else {\n        console.log(\"registeration failed\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    id: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h11\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"username\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"AH+VzutpYiyJQ4uhoWKf9JqpgHk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/PCC/Desktop/isa-front/src/components/Login/Login.jsx"],"names":["React","useState","useEffect","useContext","axios","useLocation","useNavigate","AuthContext","LoginPage","navigate","location","from","state","pathname","auth","setAuth","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","name","console","log","role","token","replace","err","response","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { AuthContext } from 'src/components/context/authProvider/authContext';\r\n\r\nimport \"./login.scss\"\r\n\r\n\r\n\r\nconst LoginPage = () => {\r\n  /*\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n    //   navigate('#profile');\r\n    }\r\n  }, [navigate])\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/api/auth/signin', {\r\n        email: email,\r\n        password: password\r\n      });\r\n      console.log(res);\r\n      // handle response\r\n      if (res.status === 200) {\r\n        // Save token in local storage\r\n        localStorage.setItem('token', res.data.token);\r\n        //navigate('#profile');\r\n        // Redirect to the profile page\r\n    }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // handle error\r\n    }\r\n  }\r\n*/\r\nconst navigate = useNavigate();\r\nconst location = useLocation();\r\nconst from = location.state?.from?.pathname || \"/home\";\r\nconst { auth, setAuth } = useContext(AuthContext);\r\n//state the name of the employee gotten from the form\r\nconst [email, setEmail] = useState(\"\");\r\n//state to store password of the employee gotten from the form\r\nconst [password, setPassword] = useState(\"\");\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    fetch(`http://localhost:3000/signin`, {\r\n      method: \"POST\",\r\n      headers: {\"content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.name) {\r\n          console.log(res);\r\n          const role = res.role;\r\n          const token = res.token;\r\n\r\n            //storing employee information in our Auth state\r\n          setAuth({ role, token, email });\r\n          console.log(auth);\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          //navigate our employee to the home page\r\n          navigate(from, { replace: true });\r\n        } else {\r\n          console.log(\"incorrect submission\");\r\n        }\r\n      });\r\n  } catch (err) {\r\n    if (!err?.response) {\r\n      console.log(\"no server response\");\r\n    } else {\r\n      console.log(\"registeration failed\");\r\n    }\r\n  }\r\n};\r\n  return (\r\n    <div className=\"login-container\" id = \"login\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h1 className = \"h11\">Login</h1>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input \r\n                type=\"email\" \r\n                className=\"form-control\" \r\n                id=\"username\" \r\n                value={email} \r\n                onChange={e => setEmail(e.target.value)} \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input \r\n                type=\"password\" \r\n                className=\"form-control\" \r\n                id=\"password\" \r\n                value={password} \r\n                onChange={e => setPassword(e.target.value)} \r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}